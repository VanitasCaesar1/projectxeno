---
import { supabase } from '../lib/supabase';
import { getTrendingMedia } from '../lib/userStats';
import StatusSelector from './StatusSelector.astro';

// Get user info for personalized content
const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

let user: any = null;
let userMediaLists: any = {
  watching: [],
  planToWatch: [],
  completed: [],
  recentlyAdded: []
};

if (accessToken && refreshToken) {
  try {
    supabase.auth.setSession({
      access_token: accessToken.value,
      refresh_token: refreshToken.value,
    });

    const { data: { user: userData }, error } = await supabase.auth.getUser();
    if (userData && !error) {
      user = userData;
      
      // Get user's media lists for personalized sections
      try {
        const { data: watchingData } = await supabase
          .from('user_media')
          .select(`
            *,
            media:media_items(*)
          `)
          .eq('user_id', user.id)
          .eq('status', 'watching')
          .order('updated_at', { ascending: false })
          .limit(10);

        const { data: planToWatchData } = await supabase
          .from('user_media')
          .select(`
            *,
            media:media_items(*)
          `)
          .eq('user_id', user.id)
          .eq('status', 'plan_to_watch')
          .order('updated_at', { ascending: false })
          .limit(10);

        const { data: completedData } = await supabase
          .from('user_media')
          .select(`
            *,
            media:media_items(*)
          `)
          .eq('user_id', user.id)
          .eq('status', 'completed')
          .order('completed_at', { ascending: false })
          .limit(10);

        const { data: recentlyAddedData } = await supabase
          .from('user_media')
          .select(`
            *,
            media:media_items(*)
          `)
          .eq('user_id', user.id)
          .order('created_at', { ascending: false })
          .limit(10);

        userMediaLists = {
          watching: watchingData || [],
          planToWatch: planToWatchData || [],
          completed: completedData || [],
          recentlyAdded: recentlyAddedData || []
        };
      } catch (error) {
        console.error('Error fetching user media lists:', error);
      }
    }
  } catch (error) {
    console.error('Error checking auth status:', error);
  }
}

// Get trending and popular media with error handling
let trendingMedia: any[] = [];
try {
  trendingMedia = await getTrendingMedia(20);
} catch (error) {
  console.error('Error fetching trending media:', error);
}

// Get popular movies with error handling
let popularMovies: any[] = [];
try {
  const { data, error } = await supabase
    .from('media_items')
    .select('*')
    .eq('media_type', 'movie')
    .gte('average_rating', 7.0)
    .gte('rating_count', 100)
    .order('rating_count', { ascending: false })
    .limit(20);
  
  if (!error && data) {
    popularMovies = data;
  }
} catch (error) {
  console.error('Error fetching popular movies:', error);
}

// Get popular TV shows with error handling
let popularTV: any[] = [];
try {
  const { data, error } = await supabase
    .from('media_items')
    .select('*')
    .eq('media_type', 'tv')
    .gte('average_rating', 7.0)
    .gte('rating_count', 50)
    .order('rating_count', { ascending: false })
    .limit(20);
  
  if (!error && data) {
    popularTV = data;
  }
} catch (error) {
  console.error('Error fetching popular TV shows:', error);
}

// Get popular books with error handling
let popularBooks: any[] = [];
try {
  const { data, error } = await supabase
    .from('media_items')
    .select('*')
    .eq('media_type', 'book')
    .gte('average_rating', 7.0)
    .gte('rating_count', 30)
    .order('rating_count', { ascending: false })
    .limit(20);
  
  if (!error && data) {
    popularBooks = data;
  }
} catch (error) {
  console.error('Error fetching popular books:', error);
}

// Get popular anime with error handling
let popularAnime: any[] = [];
try {
  const { data, error } = await supabase
    .from('media_items')
    .select('*')
    .eq('media_type', 'anime')
    .gte('average_rating', 7.0)
    .gte('rating_count', 30)
    .order('rating_count', { ascending: false })
    .limit(20);
  
  if (!error && data) {
    popularAnime = data;
  }
} catch (error) {
  console.error('Error fetching popular anime:', error);
}

// Get recently added media with error handling
let recentlyAdded: any[] = [];
try {
  const { data, error } = await supabase
    .from('media_items')
    .select('*')
    .order('created_at', { ascending: false })
    .limit(20);
  
  if (!error && data) {
    recentlyAdded = data;
  }
} catch (error) {
  console.error('Error fetching recently added media:', error);
}

// Get a featured item (highest rated with good poster) with error handling
let featuredItem: any = null;
try {
  const { data: featuredItems, error } = await supabase
    .from('media_items')
    .select('*')
    .gte('average_rating', 8.0)
    .gte('rating_count', 200)
    .not('poster_url', 'is', null)
    .order('rating_count', { ascending: false })
    .limit(5);
  
  if (!error && featuredItems && featuredItems.length > 0) {
    featuredItem = featuredItems[Math.floor(Math.random() * featuredItems.length)];
  }
} catch (error) {
  console.error('Error fetching featured item:', error);
}
---

<div class="netflix-home">
  <!-- Hero Section -->
  {featuredItem ? (
    <section class="hero-section relative h-screen flex items-center justify-center overflow-hidden">
      <!-- Background Image -->
      <div class="absolute inset-0 z-0">
        <img 
          src={featuredItem.backdrop_url || featuredItem.poster_url} 
          alt={featuredItem.title}
          class="w-full h-full object-cover"
        />
        <div class="absolute inset-0 bg-black bg-opacity-40"></div>
        <div class="absolute inset-0 bg-gradient-to-r from-black via-transparent to-transparent"></div>
        <div class="absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent"></div>
      </div>

      <!-- Hero Content -->
      <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="max-w-2xl">
          <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-4 leading-tight">
            {featuredItem.title}
          </h1>
          
          {featuredItem.description && (
            <p class="text-lg md:text-xl text-gray-200 mb-6 leading-relaxed max-w-xl">
              {featuredItem.description.length > 200 
                ? featuredItem.description.substring(0, 200) + '...' 
                : featuredItem.description}
            </p>
          )}

          <div class="flex items-center space-x-4 mb-8">
            {featuredItem.average_rating && (
              <div class="flex items-center space-x-1">
                <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                </svg>
                <span class="text-white font-semibold">{featuredItem.average_rating.toFixed(1)}</span>
              </div>
            )}
            
            <span class="text-gray-300 capitalize">{featuredItem.media_type}</span>
            
            {featuredItem.release_date && (
              <span class="text-gray-300">{new Date(featuredItem.release_date).getFullYear()}</span>
            )}
          </div>

          <div class="flex space-x-4">
            <a 
              href={`/media/${featuredItem.media_type}/${featuredItem.id}`}
              class="inline-flex items-center px-8 py-3 bg-white text-black font-bold rounded-lg hover:bg-gray-200 transition-colors duration-200"
            >
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"/>
              </svg>
              View Details
            </a>
            
            <button class="inline-flex items-center px-6 py-3 bg-gray-600 bg-opacity-70 text-white font-semibold rounded-lg hover:bg-opacity-90 transition-all duration-200">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              More Info
            </button>
          </div>
        </div>
      </div>

      <!-- Scroll indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-10">
        <div class="animate-bounce">
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
          </svg>
        </div>
      </div>
    </section>
  ) : (
    <!-- Fallback Hero Section -->
    <section class="hero-section relative h-screen flex items-center justify-center overflow-hidden">
      <div class="absolute inset-0 z-0 bg-gradient-to-br from-blue-900 via-purple-900 to-black"></div>
      
      <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-4 leading-tight">
          Welcome to <span class="text-lime-400">CoffeePlease</span>
        </h1>
        
        <p class="text-lg md:text-xl text-gray-200 mb-8 leading-relaxed max-w-2xl mx-auto">
          Your ultimate destination for tracking movies, TV shows, books, and anime. 
          Discover, organize, and share your entertainment journey.
        </p>

        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="/search" class="inline-flex items-center px-8 py-3 bg-lime-600 text-white font-bold rounded-lg hover:bg-lime-700 transition-colors duration-200">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
            Start Exploring
          </a>
          
          <a href="/dashboard" class="inline-flex items-center px-6 py-3 bg-gray-600 bg-opacity-70 text-white font-semibold rounded-lg hover:bg-opacity-90 transition-all duration-200">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
            View Dashboard
          </a>
        </div>
      </div>

      <!-- Scroll indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-10">
        <div class="animate-bounce">
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
          </svg>
        </div>
      </div>
    </section>
  )}

  <!-- Content Sections -->
  <div class="bg-black text-white min-h-screen py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 space-y-12">
      
      <!-- Personalized Sections for Authenticated Users -->
      {user && (
        <>
          <!-- Continue Watching -->
          {userMediaLists.watching && userMediaLists.watching.length > 0 && (
            <section class="media-row">
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl md:text-3xl font-bold">▶️ Continue Watching</h2>
                <a href="/my/watching" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
              </div>
              <div class="media-carousel" data-category="watching">
                <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
                  {userMediaLists.watching.map((userMedia, index) => (
                    <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={userMedia.media.id}>
                      <div class="relative">
                        <img 
                          src={userMedia.media.poster_url || '/placeholder-poster.jpg'} 
                          alt={userMedia.media.title}
                          class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                          loading={index < 6 ? 'eager' : 'lazy'}
                        />
                        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                        
                        <!-- Progress bar -->
                        {userMedia.progress && userMedia.progress > 0 && (
                          <div class="absolute bottom-0 left-0 right-0 bg-gray-800 bg-opacity-50 p-2">
                            <div class="w-full bg-gray-600 rounded-full h-1">
                              <div 
                                class="bg-blue-500 h-1 rounded-full transition-all duration-300" 
                                style={`width: ${Math.min((userMedia.progress / 100) * 100, 100)}%`}
                              ></div>
                            </div>
                            <p class="text-xs text-gray-300 mt-1">{userMedia.progress}% complete</p>
                          </div>
                        )}
                        
                        <!-- Hover overlay with status selector -->
                        <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                          <div class="bg-black bg-opacity-80 p-4 rounded-lg">
                            <StatusSelector 
                              mediaId={userMedia.media.id}
                              mediaType={userMedia.media.media_type}
                              currentStatus={userMedia.status}
                              size="sm"
                              variant="compact"
                            />
                          </div>
                        </div>
                      </div>
                      
                      <div class="mt-3">
                        <h3 class="font-semibold text-sm truncate" title={userMedia.media.title}>{userMedia.media.title}</h3>
                        <div class="flex items-center justify-between mt-1">
                          <span class="text-xs text-gray-400 capitalize">{userMedia.media.media_type}</span>
                          {userMedia.media.average_rating && (
                            <div class="flex items-center space-x-1">
                              <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                              </svg>
                              <span class="text-xs text-gray-300">{userMedia.media.average_rating.toFixed(1)}</span>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </section>
          )}

          <!-- My List (Plan to Watch) -->
          {userMediaLists.planToWatch && userMediaLists.planToWatch.length > 0 && (
            <section class="media-row">
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl md:text-3xl font-bold">📋 My List</h2>
                <a href="/my/plan-to-watch" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
              </div>
              <div class="media-carousel" data-category="plan-to-watch">
                <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
                  {userMediaLists.planToWatch.map((userMedia, index) => (
                    <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={userMedia.media.id}>
                      <div class="relative">
                        <img 
                          src={userMedia.media.poster_url || '/placeholder-poster.jpg'} 
                          alt={userMedia.media.title}
                          class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                          loading="lazy"
                        />
                        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                        
                        <!-- Hover overlay with status selector -->
                        <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                          <div class="bg-black bg-opacity-80 p-4 rounded-lg">
                            <StatusSelector 
                              mediaId={userMedia.media.id}
                              mediaType={userMedia.media.media_type}
                              currentStatus={userMedia.status}
                              size="sm"
                              variant="compact"
                            />
                          </div>
                        </div>
                      </div>
                      
                      <div class="mt-3">
                        <h3 class="font-semibold text-sm truncate" title={userMedia.media.title}>{userMedia.media.title}</h3>
                        <div class="flex items-center justify-between mt-1">
                          <span class="text-xs text-gray-400 capitalize">{userMedia.media.media_type}</span>
                          {userMedia.media.average_rating && (
                            <div class="flex items-center space-x-1">
                              <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                              </svg>
                              <span class="text-xs text-gray-300">{userMedia.media.average_rating.toFixed(1)}</span>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </section>
          )}

          <!-- Recently Completed -->
          {userMediaLists.completed && userMediaLists.completed.length > 0 && (
            <section class="media-row">
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl md:text-3xl font-bold">✅ Recently Completed</h2>
                <a href="/my/completed" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
              </div>
              <div class="media-carousel" data-category="completed">
                <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
                  {userMediaLists.completed.map((userMedia, index) => (
                    <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={userMedia.media.id}>
                      <div class="relative">
                        <img 
                          src={userMedia.media.poster_url || '/placeholder-poster.jpg'} 
                          alt={userMedia.media.title}
                          class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                          loading="lazy"
                        />
                        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                        
                        <!-- Completed badge -->
                        <div class="absolute top-2 right-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full font-semibold">
                          ✓ Completed
                        </div>
                        
                        <!-- Hover overlay with status selector -->
                        <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                          <div class="bg-black bg-opacity-80 p-4 rounded-lg">
                            <StatusSelector 
                              mediaId={userMedia.media.id}
                              mediaType={userMedia.media.media_type}
                              currentStatus={userMedia.status}
                              size="sm"
                              variant="compact"
                            />
                          </div>
                        </div>
                      </div>
                      
                      <div class="mt-3">
                        <h3 class="font-semibold text-sm truncate" title={userMedia.media.title}>{userMedia.media.title}</h3>
                        <div class="flex items-center justify-between mt-1">
                          <span class="text-xs text-gray-400 capitalize">{userMedia.media.media_type}</span>
                          {userMedia.rating && (
                            <div class="flex items-center space-x-1">
                              <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                              </svg>
                              <span class="text-xs text-gray-300">{userMedia.rating}/10</span>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </section>
          )}
        </>
      )}
      
      <!-- Trending Now -->
      {trendingMedia && trendingMedia.length > 0 && (
        <section class="media-row">
          <h2 class="text-2xl md:text-3xl font-bold mb-6">🔥 Trending Now</h2>
          <div class="media-carousel" data-category="trending">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {trendingMedia.map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading={index < 6 ? 'eager' : 'lazy'}
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                    
                    <!-- Hover overlay with status selector for authenticated users -->
                    <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                      {user ? (
                        <div class="bg-black bg-opacity-80 p-4 rounded-lg">
                          <StatusSelector 
                            mediaId={item.id}
                            mediaType={item.media_type}
                            currentStatus="plan_to_watch"
                            size="sm"
                            variant="compact"
                          />
                        </div>
                      ) : (
                        <button class="bg-white bg-opacity-90 text-black p-3 rounded-full hover:bg-opacity-100 transition-all">
                          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"/>
                          </svg>
                        </button>
                      )}
                    </div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400 capitalize">{item.media_type}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Popular Movies -->
      {popularMovies && popularMovies.length > 0 && (
        <section class="media-row">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl md:text-3xl font-bold">🎬 Popular Movies</h2>
            <a href="/movies" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
          </div>
          <div class="media-carousel" data-category="movies">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {popularMovies.map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading={index < 6 ? 'eager' : 'lazy'}
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400">{item.release_date ? new Date(item.release_date).getFullYear() : 'N/A'}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Popular TV Shows -->
      {popularTV && popularTV.length > 0 && (
        <section class="media-row">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl md:text-3xl font-bold">📺 Popular TV Shows</h2>
            <a href="/movies" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
          </div>
          <div class="media-carousel" data-category="tv">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {popularTV.map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400">{item.release_date ? new Date(item.release_date).getFullYear() : 'N/A'}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Popular Books -->
      {popularBooks && popularBooks.length > 0 && (
        <section class="media-row">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl md:text-3xl font-bold">📚 Popular Books</h2>
            <a href="/books" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
          </div>
          <div class="media-carousel" data-category="books">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {popularBooks.map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400">{item.release_date ? new Date(item.release_date).getFullYear() : 'N/A'}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Popular Anime -->
      {popularAnime && popularAnime.length > 0 && (
        <section class="media-row">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl md:text-3xl font-bold">🎌 Popular Anime</h2>
            <a href="/anime" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
          </div>
          <div class="media-carousel" data-category="anime">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {popularAnime.map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400">{item.release_date ? new Date(item.release_date).getFullYear() : 'N/A'}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Recently Added -->
      {recentlyAdded && recentlyAdded.length > 0 && (
        <section class="media-row">
          <h2 class="text-2xl md:text-3xl font-bold mb-6">🆕 Recently Added</h2>
          <div class="media-carousel" data-category="recent">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {recentlyAdded.map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400 capitalize">{item.media_type}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Top Rated Section -->
      {(() => {
        // Get top rated media across all types
        const topRatedMovies = popularMovies.filter(m => m.average_rating >= 8.0).slice(0, 10);
        const topRatedTV = popularTV.filter(t => t.average_rating >= 8.0).slice(0, 10);
        const topRatedBooks = popularBooks.filter(b => b.average_rating >= 8.0).slice(0, 10);
        const topRatedAnime = popularAnime.filter(a => a.average_rating >= 8.0).slice(0, 10);
        const allTopRated = [...topRatedMovies, ...topRatedTV, ...topRatedBooks, ...topRatedAnime]
          .sort((a, b) => b.average_rating - a.average_rating)
          .slice(0, 20);
        
        return allTopRated.length > 0 ? (
          <section class="media-row">
            <h2 class="text-2xl md:text-3xl font-bold mb-6">⭐ Top Rated</h2>
            <div class="media-carousel" data-category="top-rated">
              <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
                {allTopRated.map((item, index) => (
                  <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                    <div class="relative">
                      <img 
                        src={item.poster_url || '/placeholder-poster.jpg'} 
                        alt={item.title}
                        class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                        loading="lazy"
                      />
                      <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                      
                      <!-- Top rated badge -->
                      <div class="absolute top-2 left-2 bg-yellow-500 text-black text-xs px-2 py-1 rounded-full font-bold">
                        ⭐ {item.average_rating.toFixed(1)}
                      </div>
                      
                      <!-- Hover overlay with status selector for authenticated users -->
                      <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                        {user ? (
                          <div class="bg-black bg-opacity-80 p-4 rounded-lg">
                            <StatusSelector 
                              mediaId={item.id}
                              mediaType={item.media_type}
                              currentStatus="plan_to_watch"
                              size="sm"
                              variant="compact"
                            />
                          </div>
                        ) : (
                          <button class="bg-white bg-opacity-90 text-black p-3 rounded-full hover:bg-opacity-100 transition-all">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"/>
                            </svg>
                          </button>
                        )}
                      </div>
                    </div>
                    
                    <div class="mt-3">
                      <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                      <div class="flex items-center justify-between mt-1">
                        <span class="text-xs text-gray-400 capitalize">{item.media_type}</span>
                        <span class="text-xs text-gray-300">{item.release_date ? new Date(item.release_date).getFullYear() : 'N/A'}</span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </section>
        ) : null;
      })()}

      <!-- New Releases Section -->
      {recentlyAdded && recentlyAdded.length > 0 && (
        <section class="media-row">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl md:text-3xl font-bold">🆕 New Releases</h2>
            <a href="/search?sort=newest" class="text-blue-400 hover:text-blue-300 font-medium">View All →</a>
          </div>
          <div class="media-carousel" data-category="new-releases">
            <div class="flex space-x-4 overflow-x-auto pb-4 scrollbar-hide">
              {recentlyAdded.slice(0, 20).map((item, index) => (
                <div class="media-card flex-shrink-0 w-48 group cursor-pointer" data-media-id={item.id}>
                  <div class="relative">
                    <img 
                      src={item.poster_url || '/placeholder-poster.jpg'} 
                      alt={item.title}
                      class="w-full h-72 object-cover rounded-lg group-hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                    />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 rounded-lg"></div>
                    
                    <!-- New badge -->
                    <div class="absolute top-2 right-2 bg-red-500 text-white text-xs px-2 py-1 rounded-full font-bold">
                      NEW
                    </div>
                    
                    <!-- Hover overlay with status selector for authenticated users -->
                    <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                      {user ? (
                        <div class="bg-black bg-opacity-80 p-4 rounded-lg">
                          <StatusSelector 
                            mediaId={item.id}
                            mediaType={item.media_type}
                            currentStatus="plan_to_watch"
                            size="sm"
                            variant="compact"
                          />
                        </div>
                      ) : (
                        <button class="bg-white bg-opacity-90 text-black p-3 rounded-full hover:bg-opacity-100 transition-all">
                          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"/>
                          </svg>
                        </button>
                      )}
                    </div>
                  </div>
                  
                  <div class="mt-3">
                    <h3 class="font-semibold text-sm truncate" title={item.title}>{item.title}</h3>
                    <div class="flex items-center justify-between mt-1">
                      <span class="text-xs text-gray-400 capitalize">{item.media_type}</span>
                      {item.average_rating && (
                        <div class="flex items-center space-x-1">
                          <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                          </svg>
                          <span class="text-xs text-gray-300">{item.average_rating.toFixed(1)}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Call to Action -->
      <section class="text-center py-16">
        <h2 class="text-3xl md:text-4xl font-bold mb-4">
          {user ? 'Ready to Discover More?' : 'Ready to Start Tracking?'}
        </h2>
        <p class="text-xl text-gray-300 mb-8 max-w-2xl mx-auto">
          {user 
            ? 'Explore our vast collection and find your next favorite show, movie, book, or anime.'
            : 'Join thousands of users who are already organizing their entertainment journey'
          }
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {user ? (
            <>
              <a href="/search" class="inline-flex items-center px-8 py-3 bg-lime-600 text-white font-bold rounded-lg hover:bg-lime-700 transition-colors duration-200">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                </svg>
                Explore Media
              </a>
              <a href="/dashboard" class="inline-flex items-center px-8 py-3 bg-gray-600 bg-opacity-70 text-white font-semibold rounded-lg hover:bg-opacity-90 transition-all duration-200">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                </svg>
                View Dashboard
              </a>
            </>
          ) : (
            <>
              <a href="/register" class="inline-flex items-center px-8 py-3 bg-lime-600 text-white font-bold rounded-lg hover:bg-lime-700 transition-colors duration-200">
                Get Started Free
              </a>
              <a href="/search" class="inline-flex items-center px-8 py-3 bg-gray-600 bg-opacity-70 text-white font-semibold rounded-lg hover:bg-opacity-90 transition-all duration-200">
                Browse Media
              </a>
            </>
          )}
        </div>
      </section>
    </div>
  </div>
</div>

<style>
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  .media-card {
    transition: transform 0.3s ease;
  }

  .media-card:hover {
    transform: translateY(-4px);
  }

  .hero-section {
    background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);
  }

  .media-row {
    position: relative;
  }

  .media-carousel {
    position: relative;
  }

  /* Smooth scrolling for carousels */
  .media-carousel .flex {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar for webkit browsers */
  .media-carousel .flex::-webkit-scrollbar {
    height: 6px;
  }

  .media-carousel .flex::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
  }

  .media-carousel .flex::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 3px;
  }

  .media-carousel .flex::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Add click handlers for media cards
    const mediaCards = document.querySelectorAll('.media-card');
    
    mediaCards.forEach(card => {
      card.addEventListener('click', () => {
        const mediaId = (card as HTMLElement).dataset.mediaId;
        const carousel = card.closest('.media-carousel') as HTMLElement;
        const category = carousel ? carousel.dataset.category : null;
        
        // Navigate to media detail page
        if (mediaId) {
          // Get the actual media type from the card or determine from category
          let actualMediaType = 'movie'; // default
          
          if (category === 'books') actualMediaType = 'book';
          else if (category === 'anime') actualMediaType = 'anime';
          else if (category === 'tv') actualMediaType = 'tv';
          else if (category === 'movies') actualMediaType = 'movie';
          
          window.location.href = `/media/${actualMediaType}/${mediaId}`;
        }
      });
    });

    // Add smooth scrolling for carousels (optional enhancement)
    const carousels = document.querySelectorAll('.media-carousel .flex');
    
    carousels.forEach(carousel => {
      let isScrolling = false;
      
      carousel.addEventListener('wheel', (e: WheelEvent) => {
        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) return;
        
        e.preventDefault();
        
        if (!isScrolling) {
          isScrolling = true;
          
          carousel.scrollBy({
            left: e.deltaY > 0 ? 200 : -200,
            behavior: 'smooth'
          });
          
          setTimeout(() => {
            isScrolling = false;
          }, 100);
        }
      });
    });
  });
</script>